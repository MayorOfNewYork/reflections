Q: How did viewing a diff between two versions of a file help you see the bug that was introduced?

diff shows you exactly the lines that have been changed from one version to another
this makes the scope of your search smaller
you don't have to look at lines that haven't been changed, and that therefore have no errors.

Q: How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

you can easily rollback unwanted changes to your code

Q: What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git,
 vs having versions automatically saved, like Google Docs does?

the commits can contain information more relevant to you
you can choose the size of your commits

Q: Why do you think some version control systems, like Git, allow saving multiple files in one commit,
 while others, like Google Docs, treat each file separately?

google docs does not have repository functionality and is not made with coding in mind,
and since most non-coding applications don't have the need for multiple-file control
good docs didn't implement it.

Q: How can you use the commands git log and git diff to view the history of files?

you can use git log to view the list of commits to that repostitory
as well as additional information with the "--stat" parameter
and git diff allows you use to compare two commits

Q: How might using version control make you more confident to make changes that could break something?

with every change being reversible you won't be afraid to change something that could break the program
and that you would not be able to fix.
if something breaks you can not only change it back but also have a "diff" functionality to help you track the bug

Q: Now that you have your workspace set up, what do you want to try using Git for?

anything but version control.