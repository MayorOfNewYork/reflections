Q) When would you want to use a remote repository rather than keeping all your work
local?

    When you want to be able to work from different places, be it because you are working with
    someone else or you have multiple working places, as well as when you want to share your
    work with others.

Q) Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    You might be working on personal changes to the project and don't want to 
	keep things in synch with the remote.

Q) Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Forking is a feature of github has a functionality similar to git clone.
	it creates another repository in your github page with all the contents
	of the repository you forked from, and also links back to the original 
	and keeps track of how many people have forked a repository. Cloning is 
	copying a repository from a host to your computer and branching is creating
	a different line of commits for experimental changes.
	You use the first when you want to make personal changes to the project of
	another person with no intention of altering the original, cloning is simply
	downloading a repository and is necessary to work on the files outside of the
	limited work environment of the github website and branching is for local
	experimental changes.

Q) What is the benefit of having a copy of the last known state of the remote
stored locally?

    So you can track how many commits you are ahead of the last known state, as well
	as using it as the head of the "remote branch" wherein are commited the changes
	from the repository.

Q) How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    I could share my repository in Github and use Git's version control functionalities
	to help me organize the project. It would be much easier.

Q) When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
